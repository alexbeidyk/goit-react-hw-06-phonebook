{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-reducer.js","redux/store.js","Component/Container/Container.jsx","Component/ContactListItem/ContactListItem.jsx","Component/ContactList/ContactList.jsx","Component/Filter/Filter.jsx","Component/ContactForm/ButtonForm.jsx","Component/ContactForm/ContactForm.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","filterOutContacts","itemsReducer","createReducer","id","name","number","state","payload","undefined","find","item","alert","addConditionalContact","filter","filterReducer","_","combineReducers","items","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","useStyles","createUseStyles","container","margin","right","left","top","padding","width","Container","children","classes","className","button","marginLeft","backgroundColor","border","borderRadius","cursor","marginBottom","ContactListItem","onDeleteContact","type","onClick","getfilteredContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","connect","filteredContacts","dispatch","map","input","outline","boxShadow","value","onHandleChange","e","target","titel","placeholder","onChange","bottom","display","ButtonForm","onSubmitForm","labelInputIdName","uuidv4","labelInputIdNumber","useState","setName","setNumber","handleChange","currentTarget","resetForm","styles","form","onSubmit","preventDefault","label","htmlFor","required","App","ContactForm","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.def957ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Lasq\",\"label\":\"ContactForm_label__3Azty\",\"input\":\"ContactForm_input__39_Pk\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add');\nconst deleteContact = createAction('contacts/delete');\nconst filterOutContacts = createAction('contacts/filterOut');\n\nexport { addContact, deleteContact, filterOutContacts };\n","import {\n  addContact,\n  deleteContact,\n  filterOutContacts,\n} from './contacts-actions';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst INITIAL_CONTACTS = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\nconst addConditionalContact = (state, payload) => {\n  const includedInContacts = state.find(item => item.name === payload.name);\n\n  if (includedInContacts !== undefined) {\n    alert(`${payload.name} is already in contacts`);\n    return state;\n  }\n  return [...state, payload];\n};\n\nconst itemsReducer = createReducer(INITIAL_CONTACTS, {\n  [addContact]: (state, { payload }) => addConditionalContact(state, payload),\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [filterOutContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './Contacts/contacts-reducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  container: {\n    margin: {\n      right: 'auto',\n      left: 'auto',\n      top: '20px',\n    },\n    padding: '20px',\n    width: '400px',\n  },\n});\nconst Container = ({ children }) => {\n  const classes = useStyles();\n\n  return <div className={classes.container}>{children}</div>;\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  button: {\n    marginLeft: '10px',\n    backgroundColor: 'white',\n    border: ['1px', 'solid', 'grey'],\n    borderRadius: '5px',\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\n    },\n  },\n  item: {\n    marginBottom: '10px',\n  },\n});\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\n  const classes = useStyles();\n  return (\n    <li className={classes.item}>\n      <span>{name}</span>: <span>{number}</span>\n      <button\n        className={classes.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/Contacts/contacts-actions';\n\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {filteredContacts.map(item => (\n        <ContactListItem\n          key={item.id}\n          id={item.id}\n          name={item.name}\n          number={item.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getfilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  filteredContacts: getfilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\nimport { connect } from 'react-redux';\nimport { filterOutContacts } from '../../redux/Contacts/contacts-actions';\n\nconst useStyles = createUseStyles({\n  input: {\n    padding: '5px',\n    outline: 'none',\n    '&:focus': {\n      border: ['2px', 'solid', 'blue'],\n      boxShadow: [\n        'inset',\n        '0px',\n        '0px',\n        '3px',\n        '3px',\n        'rgba(116, 113, 255, 0.34)',\n      ],\n    },\n  },\n});\n\nconst Filter = ({ value, onHandleChange }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <h3 className={classes.titel}>Find contacts by name</h3>\n      <input\n        className={classes.input}\n        type=\"text\"\n        placeholder=\"Search contact\"\n        name=\"filter\"\n        value={value}\n        onChange={onHandleChange}\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onHandleChange: e => dispatch(filterOutContacts(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  button: {\n    cursor: 'pointer',\n    margin: {\n      right: 'auto',\n      left: 'auto',\n      top: '20px',\n      bottom: '20px',\n    },\n    display: 'block',\n    padding: '5px',\n    width: '140px',\n    backgroundColor: 'transparent',\n    borderRadius: '5px',\n    '&:hover': {\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\n    },\n  },\n});\n\nconst ButtonForm = () => {\n  const classes = useStyles();\n  return (\n    <button className={classes.button} type=\"submit\">\n      Add contact\n    </button>\n  );\n};\n\nexport default ButtonForm;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/Contacts/contacts-actions';\n\nimport PropTypes from 'prop-types';\nimport ButtonForm from './ButtonForm';\nimport styles from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Contactform = ({ onSubmitForm }) => {\n  const labelInputIdName = uuidv4();\n  const labelInputIdNumber = uuidv4();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    const contact = { id: uuidv4(), name: name, number: number };\n    e.preventDefault();\n    onSubmitForm(contact);\n\n    resetForm();\n  };\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor={labelInputIdName}>\n        Name\n      </label>\n      <input\n        className={styles.input}\n        id={labelInputIdName}\n        type=\"text\"\n        name=\"name\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChange}\n      ></input>\n      <label className={styles.label} htmlFor={labelInputIdNumber}>\n        Number\n      </label>\n      <input\n        className={styles.input}\n        id={labelInputIdNumber}\n        type=\"tel\"\n        name=\"number\"\n        required\n        placeholder=\"Enter you number\"\n        value={number}\n        onChange={handleChange}\n      ></input>\n      <ButtonForm />\n    </form>\n  );\n};\nContactform.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmitForm: contact => dispatch(addContact(contact)),\n});\nexport default connect(null, mapDispatchToProps)(Contactform);\n","import Container from './Component/Container';\nimport ContactList from './Component/ContactList';\nimport Filter from './Component/Filter';\nimport ContactForm from './Component/ContactForm';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}